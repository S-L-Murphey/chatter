import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { RouterOutputs, api } from "~/utils/api";
import Image from "next/image";
import dayjs from "dayjs"
import relativeTime from "dayjs/plugin/relativeTime"
import { LoadingPage } from "~/components/loading";

dayjs.extend(relativeTime)

const CreatePost = () => {
  const { user } = useUser();

  if (!user) return <div>No user logged in...</div>

  return (
    <div className="flex gap-3 w-full">
      <Image src={user.profileImageUrl} width={84}
        height={84} alt="Profile Image" className="rounded-full" />
      <input placeholder="Send a chat!" className="bg-transparent grow outline-none" />
    </div>
  )
};


type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="p-4 border-b border-stone-500 flex gap-3">
      <Image src={author.profileImageUrl} width={48}
        height={48} alt={`@${author.username}'s profile picture.`} className="rounded-full" />
      <div className="flex flex-col">
        <div className="flex gap-1"><span className="text-slate-200">{`@${author.username}`}</span><span className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow()}`}</span></div>
        <span>{post.content}</span>
      </div>

    </div>
  )
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />

  if (!data) return <div>Something went wrong...</div>

  return (
    <div className="flex flex-col text-slate-400">
      {data?.map((fullPost) => (<PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  )
}

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();

  // Only using this to make sure this fetches early
  api.posts.getAll.useQuery();

  if (!userLoaded) return <div />

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="h-full w-full md:max-w-2xl border-x border-stone-500">
          <div className="flex border-b border-stone-500 text-slate-300 p-4">{!isSignedIn && <div className="flex justify-center"><SignInButton /></div>}{isSignedIn && <CreatePost />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
